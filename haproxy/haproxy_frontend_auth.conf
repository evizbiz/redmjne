#
# from https://www.exratione.com/2012/12/websockets-over-ssl-haproxy-nodejs-nginx
# and http://stackoverflow.com/questions/13227544/haproxy-redirecting-http-to-https-ssl
# and http://nbevans.wordpress.com/2011/03/03/cultural-learnings-of-ha-proxy-for-make-benefit
# and http://comments.gmane.org/gmane.comp.web.haproxy/5888
# perhaps use this joiner: https://github.com/joewilliams/haproxy_join
#
userlist honsys
  group users
  user guest insecure-password anon groups users
  user admin insecure-password golddog groups users
  user david insecure-password golddog groups users
  user hon insecure-password golddog groups users

# redirect public http to secured -- iptables nat set to redirect 80 to 9080 and 443 to 9443
#
frontend public
  mode http
# mode tcp  
  bind :9080
# Redirect all HTTP traffic to HTTPS
  redirect scheme https if !{ ssl_fc }
 
# HTTPS -- note cacert key first item in this file, followed by private key...
# haproxy is ok with this but not the reverse?
  bind :9443 ssl crt honsys.comGeoTrustCAcertificate_and_PrivateKey.pem
#
# these fail:
# bind :9443 ssl crt honsys.comGeoTrust_Global_CA_root_GeoTrustPrivateKey.pem
# bind :9443 ssl crt honsys.comGeoTrust_Global_CA_root_Apr2014GeoTrustDVSSLCA.pem
# bind :9443 ssl crt honsys.comApr2014GeoTrustDVSSLCA_GeoTrust_Global_CA_root_GeoTrustPrivateKey.pem
# bind :9443 ssl crt honsys.comApr2014GeoTrustDVSSLCA_and_GeoTrustCAcertificate_and_GeoTrustPrivateKey.pem
# bind :9443 ssl crt honsys.comApr2014GeoTrustDVSSLCA_and_GeoTrustCAcertificate_and_GeoTrustPrivateKey.pem
# bind :9443 ssl crt honsys.Apr2014GeoTrustDVSSLCA_PrivateKey.pem
# bind :9443 ssl crt honsys.comGeoTrustCAcertificate_and_PrivateKey_and_Apr2014GeoTrustDVSSLCA.pem
# bind :9443 ssl crt honsys.comGeoTrustPrivateKeyApr2014GeoTrustDVSSLCA.pem
# bind :9443 ssl crt honsys.Apr2014GeoTrustDVSSLCA_and_GeoTrustCAcertificate.pem
# bind :9443 ssl crt honsys.Apr2014GeoTrustDVSSLCA_and_GeoTrustCAcertificate_and_PrivateKey.pem
# bind :9443 ssl crt honsys.Apr2014GeoTrustDVSSLCA_and_GeoTrustCAcertificate_and_GeoTrustPrivateKey.pem

# authenticate user in frontend
  acl auth_users http_auth_group(honsys) users
  http-request auth realm users if !auth_users
# http-request auth realm users if TRUE

# send invest & finance traffic to same static page(for now)
  acl investdomain path_beg /invest
  acl investdomain hdr_end(host) -i invest.eviz.biz
  acl investdomain hdr_end(host) -i invest.honsys.com
  acl investdomain hdr_end(host) -i invest.honsys.net
  redirect location http://honsys.com/~hon/invest/modiv if investdomain

  acl financedomain path_beg /finance
  acl financedomain hdr_end(host) -i finance.eviz.biz
  acl financedomain hdr_end(host) -i finance.honsys.com
  acl financedomain hdr_end(host) -i finance.honsys.net
  redirect location http://honsys.com/~hon/invest/modiv if financedomain

# unable to get hudson to work properly in analogous fashion to scm-manager (scm.honsys.com)
# so do this redirect:
  acl use_hudson hdr_end(host) -i ci.honhedge.com
  acl use_hudson hdr_end(host) -i ci.honsys.com
  redirect location http://honsys.com/hudson if use_hudson

# jenkins seems ok (after a few retries) so this redirect may not be needed?
# acl use_jenkins hdr_end(host) -i ci.honsys.net
# redirect location http://honsys.net/jenkins if use_jenkins

# solr redirect to ir ? 
  acl use_solr hdr_end(host) -i solr.eziv.biz
  acl use_solr hdr_end(host) -i solr.honhedge.com
  acl use_solr hdr_end(host) -i solr.honsys.com
  acl use_solr hdr_end(host) -i solr.honsys.net
  redirect location http://ir.honhedge.com/solr if use_solr

# haproxy stats & admin page also setup for ssl honsys cacert
  acl use_stats hdr_end(host) -i stats.eviz.biz
  acl use_stats hdr_end(host) -i stats.honhedge.com
  acl use_stats hdr_end(host) -i stats.honsys.com
  acl use_stats hdr_end(host) -i stats.honsys.net
  use_backend stats if use_stats

# solr search, dspace, vivo IR services (tomcat jee webapps) should use subdomain ir.whatever
  acl use_tomcat70 hdr_end(host) -i ir.eviz.biz
  acl use_tomcat70 hdr_end(host) -i ir.honhedge.com
  acl use_tomcat70 hdr_end(host) -i ir.honsys.com
  acl use_tomcat70 hdr_end(host) -i ir.honsysnet.
# acl use_tomcat70 hdr_end(host) -i dspace.honsys.com
# acl use_tomcat70 hdr_end(host) -i vivo.honsys.com
  use_backend tomcat70 if use_tomcat70

# release candidate services (tomcat jee webapps) should use subdomain rc.whatever
  acl use_tomcat90 hdr_end(host) -i honsys.net
  acl use_tomcat90 hdr_end(host) -i rc.redmjne.org
  use_backend tomcat90 if use_tomcat90

# apollo mom jee service 
  acl use_apollo hdr_end(host) -i mom.eviz.biz
  acl use_apollo hdr_end(host) -i mom.honhedge.com
  acl use_apollo hdr_end(host) -i mom.honsys.com
  acl use_apollo hdr_end(host) -i mom.honsys.net
  use_backend apollo if use_apollo

# all the above are tomcat jee webapps ... below are individual nodejs servers ...

# sequelize-doc == docs for nodejs orm supports sqlite mysql postgres and more: 
  acl use_sqliz hdr_end(host) -i sqliz.eviz.biz
  acl use_sqliz hdr_end(host) -i sqliz.honhedge.com
  acl use_sqliz hdr_end(host) -i sqliz.honsys.com
  acl use_sqliz hdr_end(host) -i sqliz.honsys.net
  use_backend sequelize if use_sqliz

# epad == nodejs etherpad-lite instance
# etherpad-lite settings.json edited for ssl honsys cacert
  acl use_epad hdr_end(host) -i epad.eviz.biz
  acl use_epad hdr_end(host) -i epad.honhedge.com
  acl use_epad hdr_end(host) -i epad.honsys.com
  acl use_epad hdr_end(host) -i epad.honsys.net
  use_backend etherpad if use_epad

# nide == a simple nodejs ide app (no longer maintained?): 
# acl use_nide hdr_end(host) -i nide.eviz.biz
# acl use_nide hdr_end(host) -i nide.honsys.com
# acl use_nide hdr_end(host) -i nide.honsys.net
# use_backend node_ide if use_nide

# cesium == another nodejs app: 
  acl use_cesium hdr_end(host) -i earthlimb.net
  acl use_cesium hdr_end(host) -i cesium.eviz.biz
  acl use_cesium hdr_end(host) -i sci.eviz.biz
  use_backend cesium if use_cesium

# cloud9 == a more sophisticated nodejs ide app (no longer actively maintained?): 
# acl use_cloud9 hdr_end(host) -i cloud9.eviz.biz
# acl use_cloud9 hdr_end(host) -i cloud9.honsys.com
# acl use_cloud9 hdr_end(host) -i cloud9.honsys.net
# use_backend cloud9 if use_cloud9

# codebox == another more sophisticated nodejs ide app (actively maintained ~ apr2014): 
  acl use_codebox hdr_end(host) -i ide.47percent.us
  acl use_codebox hdr_end(host) -i ide.eviz.biz
  acl use_codebox hdr_end(host) -i ide.honhedge.com
  acl use_codebox hdr_end(host) -i ide.honsys.com
  acl use_codebox hdr_end(host) -i ide.honsys.net
  use_backend codebox if use_codebox

# in principle there's no need to call-out tomcat webapps when it's default backend
# acl use_tomcat80 hdr_end(host) -i scm.honsys.com
# acl use_tomcat80 hdr_end(host) -i redmjne.org
# use_backend tomcat80 if use_tomcat80
# services provided by various wars (scm-manager, redmjne, hudson, etc.) 
# are webapps in the default backen tomcat (8080) at honsys.com
  default_backend tomcat80

#
######################## end frontends #####################
#


